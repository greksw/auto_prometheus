#!/bin/bash
set -euo pipefail

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
GRAFANA_DOMAIN="$(hostname -f)"
PROMETHEUS_PASSWORD="$(openssl rand -hex 16)"
EXPORTER_PASSWORD="$(openssl rand -hex 16)"
FAIL2BAN_BANTIME="1h"
FAIL2BAN_MAXRETRY="3"
LOG_FILE="/var/log/monitoring_setup_$(date +%Y%m%d_%H%M%S).log"

# --- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ ---
check_service() {
    local service_name=$1
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ $service_name... "
    
    if systemctl is-active --quiet "$service_name"; then
        echo "OK"
    else
        echo "–û–®–ò–ë–ö–ê"
        echo "–°—Ç–∞—Ç—É—Å $service_name:"
        systemctl status "$service_name" --no-pager
        journalctl -u "$service_name" -n 20 --no-pager
        exit 1
    fi
}

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
exec > >(tee -a "$LOG_FILE") 2>&1
echo "üìÖ –ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $(date)"

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ---
echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
export DEBIAN_FRONTEND=noninteractive
apt-get update -q && apt-get install -yq \
    wget curl ufw fail2ban openssl \
    apache2-utils python3 software-properties-common \
    gnupg2 apt-transport-https

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall ---
echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
ufw --force reset
ufw default deny incoming
ufw default allow outgoing
ufw allow ssh
ufw allow 443/tcp
ufw allow 9090/tcp
ufw allow 9100/tcp
echo "y" | ufw enable
ufw status verbose

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ ---
echo "üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
mkdir -p /etc/ssl/private
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/ssl/private/monitoring.key \
    -out /etc/ssl/private/monitoring.crt \
    -subj "/CN=$GRAFANA_DOMAIN/O=Secure Monitoring/OU=DevOps"
chmod 644 /etc/ssl/private/monitoring.crt
chmod 640 /etc/ssl/private/monitoring.key
chown root:grafana /etc/ssl/private/monitoring.key

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Prometheus ---
echo "üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Prometheus..."
useradd --system --no-create-home --shell /bin/false prometheus || true

PROM_VERSION="2.47.0"
wget -q "https://github.com/prometheus/prometheus/releases/download/v${PROM_VERSION}/prometheus-${PROM_VERSION}.linux-amd64.tar.gz"
tar xf prometheus-*.tar.gz -C /opt/
mv /opt/prometheus-* /opt/prometheus
rm prometheus-*.tar.gz

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p /opt/prometheus/data
chown -R prometheus:prometheus /opt/prometheus

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
cat > /opt/prometheus/prometheus.yml <<EOF
global:
  scrape_interval: 15s

scrape_configs:
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']
    basic_auth:
      username: exporter
      password: '$EXPORTER_PASSWORD'
EOF

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
htpasswd -b -c /opt/prometheus/web.yml admin "$PROMETHEUS_PASSWORD" || {
    apt-get install -yq apache2-utils
    htpasswd -b -c /opt/prometheus/web.yml admin "$PROMETHEUS_PASSWORD"
}

chown prometheus:prometheus /opt/prometheus/web.yml

# Systemd —Å–µ—Ä–≤–∏—Å
cat > /etc/systemd/system/prometheus.service <<EOF
[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
ExecStart=/opt/prometheus/prometheus \\
    --config.file=/opt/prometheus/prometheus.yml \\
    --web.config.file=/opt/prometheus/web.yml \\
    --web.listen-address=:9090 \\
    --storage.tsdb.path=/opt/prometheus/data \\
    --web.external-url=https://$GRAFANA_DOMAIN:9090 \\
    --query.log-file=""
Restart=always

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable --now prometheus
check_service prometheus

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node Exporter ---
echo "üñ•Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node Exporter..."
useradd --system --no-create-home --shell /bin/false node_exporter || true

NODE_VERSION="1.6.1"
wget -q "https://github.com/prometheus/node_exporter/releases/download/v${NODE_VERSION}/node_exporter-${NODE_VERSION}.linux-amd64.tar.gz"
tar xf node_exporter-*.tar.gz
mv node_exporter-*/node_exporter /usr/local/bin/
rm -rf node_exporter-*

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
mkdir -p /etc/node_exporter
echo "exporter:$(openssl passwd -apr1 $EXPORTER_PASSWORD)" > /etc/node_exporter/web.yml
chown node_exporter:node_exporter /etc/node_exporter/web.yml

# Systemd —Å–µ—Ä–≤–∏—Å
cat > /etc/systemd/system/node_exporter.service <<EOF
[Unit]
Description=Node Exporter
After=network.target

[Service]
User=node_exporter
Group=node_exporter
ExecStart=/usr/local/bin/node_exporter \\
    --web.config.file=/etc/node_exporter/web.yml \\
    --web.listen-address=:9100
Restart=always

[Install]
WantedBy=multi-user.target
EOF

systemctl enable --now node_exporter
check_service node_exporter

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Grafana ---
echo "üìà –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Grafana..."
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
apt-get install -yq gnupg2
curl -fsSL https://packages.grafana.com/gpg.key | gpg --dearmor > /usr/share/keyrings/grafana-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/grafana-archive-keyring.gpg] https://packages.grafana.com/oss/deb stable main" > /etc/apt/sources.list.d/grafana.list
apt-get update -q && apt-get install -yq grafana

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –µ—Å–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
if ! apt-get install -yq grafana; then
    echo "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Grafana"
    GRAFANA_VERSION="10.4.3"
    wget -q "https://dl.grafana.com/oss/release/grafana_${GRAFANA_VERSION}_amd64.deb"
    dpkg -i grafana_*.deb || apt-get install -yf
    rm grafana_*.deb
fi

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Grafana
cat > /etc/grafana/grafana.ini <<EOF
[server]
protocol = http
http_port = 3000
domain = $GRAFANA_DOMAIN

[security]
disable_initial_admin_creation = false
admin_user = admin
admin_password = $(openssl rand -hex 12)
EOF

# –ü—Ä–∞–≤–∞ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
chown -R grafana:grafana /etc/ssl/private
systemctl enable --now grafana-server
check_service grafana-server

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Fail2Ban ---
echo "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Fail2Ban..."
cat > /etc/fail2ban/jail.d/monitoring.conf <<EOF
[grafana]
enabled = true
port = http,https,3000
filter = grafana
logpath = /var/log/grafana/grafana.log
maxretry = $FAIL2BAN_MAXRETRY
bantime = $FAIL2BAN_BANTIME

[prometheus]
enabled = true
port = 9090
filter = prometheus
logpath = /var/log/syslog
maxretry = $FAIL2BAN_MAXRETRY
bantime = $FAIL2BAN_BANTIME
EOF

cat > /etc/fail2ban/filter.d/grafana.conf <<EOF
[Definition]
failregex = ^.*Failed.* user=<HOST>.*
ignoreregex =
EOF

cat > /etc/fail2ban/filter.d/prometheus.conf <<EOF
[Definition]
failregex = ^.*invalid username or password.* <HOST>
ignoreregex =
EOF

systemctl restart fail2ban
check_service fail2ban

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ ---
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤..."
ss -tulnp | grep -E '9090|3000|9100' || {
    echo "‚ö†Ô∏è –ù–µ –≤—Å–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã!"
    exit 1
}

# --- –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---
GRAFANA_PASSWORD=$(grep 'admin_password' /etc/grafana/grafana.ini | cut -d' ' -f3)
echo "
üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞!

üîó –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:
- Prometheus:  http://$(hostname -I | awk '{print $1}'):9090
  –õ–æ–≥–∏–Ω: admin
  –ü–∞—Ä–æ–ª—å: $PROMETHEUS_PASSWORD

- Grafana:     http://$(hostname -I | awk '{print $1}'):3000
  –õ–æ–≥–∏–Ω: admin
  –ü–∞—Ä–æ–ª—å: $GRAFANA_PASSWORD

- Node Exporter: http://$(hostname -I | awk '{print $1}'):9100/metrics
  –õ–æ–≥–∏–Ω: exporter
  –ü–∞—Ä–æ–ª—å: $EXPORTER_PASSWORD

üìã –õ–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $LOG_FILE
"
